2.14.3 Character literals [lex.ccon]

2 A character literal that begins with the letter u, such as u'y', is a character literal of type char16_t. The value of a char16_t literal containing a single c-char is equal to its ISO 10646 code point value, provided that the code point is representable with a single 16-bit code unit. (That is, provided it is a basic multi-lingual plane code point.) If the value is not representable within 16 bits, the program is ill-formed. A char16_t literal containing multiple c-chars is ill-formed. A character literal that begins with the letter U, such as U'z', is a character literal of type char32_t. The value of a char32_t literal containing a single c-char is equal to its ISO 10646 code point value. A char32_t literal containing multiple c-chars is ill-formed. A character literal that begins with the letter L, such as L'x', is a wide-character literal. A wide-character literal has type wchar_t.22 The value of a wide-character literal containing a single c-char has value equal to the numerical value of the encoding of the c-char in the execution wide-character set, unless the c-char has no representation in the execution wide-character set, in which case the value is implementation-defined.  [ Note: the type wchar_t is able to represent all members of the execution wide-charater set (see 3.9.1).  -end note ]. The value of a wide-character literal containing multiple c-chars is implementation-defined.

22) They are intended for character sets where a character does not fit into a single byte.

2 文字 u で始まる文字リテラル、例えば u'y' 、は char16_t 型の文字リテラルである。
単独の c-char を含む char16_t リテラルの値はその ISO 10646 コードポイントの値と同値であり、そのコードポイントは単独の 16 ビットコード単位で表現可能として提供される ( それは、基本多言語面 BMP のコードポイントとして提供される。 ) 。 16 ビットでは表現不可能な場合、そのプログラムは不適格である。複数の c-char を含む char16_t リテラルは不適格である。文字 U で始まる文字リテラル、例えば U'z' 、は char32_t 型の文字リテラルである。単独の c-char を含む char32_t リテラルの値はその ISO 10646 コードポイントの値と同値である。複数の c-char を含む char32_t リテラルは不適格である。文字 L で始まる文字リテラル、例えば L'x' 、はワイド文字リテラルである。ワイド文字リテラルは wchar_t 型を持つ 22 。単独の c-char を含むワイド文字リテラルの値は実行ワイド文字集合におけるその c-char の符号化方式の数値と同等の値を持つ ( c-char が実行ワイド文字集合において表現を持たない場合を除く。そのような場合その値は実装時定義となる。 ) 。 [ 注: wchar_t 型は実行ワイド文字集合のすべての文字を表現することができる ( 3.9.1 参照 ) 。 ] 複数の c-char を含むワイド文字リテラルの値は実装時定義となる。

22) これらは文字が単独のバイトでは不適切である文字集合を対象としている。

4 The escape \ooo consists of the backslash followed by one, two, or three octal digits that are taken to specify the value of the desired character. The escape \xhhh consists of the backslash followed by x followed by one or more hexadecimal digits that are taken to specify the value of the desired character. There is no limit to the number of digits in a hexadecimal sequence. A sequence of octal or hexadecimal digits is terminated by the first character that is not an octal digit or a hexadecimal digit, respectively. The value of a character literal is implementation-defined if it falls outside of the implementation-defined range defined for char (for literals with no prefix), char16_t (for literals prefixed by 'u'), char32_t (for literals prefixed by 'U'), or wchar_t (for literals prefixed by 'L').

4 \ooo というエスケープはバックスラッシュに続く目的の文字の値を指定するひとつ、ふたつ、もしくはみっつの八進数から成る。 \xhhh というエスケープはバックスラッシュ、 x に続く目的の文字の値を指定するひとつ以上の十六進数から成る。一連の十六進数における桁数に制限はない。一連の八進数もしくは十六進数の連続はそれぞれ、八進数もしくは十六進数でない最初の文字によって終了する。文字リテラルが char ( 接頭辞なしのリテラル ) 、 char16_t ( 接頭辞 'u' のリテラル ) 、 char32_t ( 接頭辞 'U' のリテラル ) 、 wchar_t ( 接頭辞 'L' のリテラル ) で定義された実装時定義の範囲外になる場合その値は実装時定義である。

